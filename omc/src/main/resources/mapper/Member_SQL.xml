<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="member">


<!--  selectMemberId(아이디중복검사,로그인, 회원정보수정폼,  회원상세) -->
	<select id="selectMemberId" parameterType="hashmap" resultType="hashmap">	
	<![CDATA[
		SELECT *
		FROM
			MEMBER
		WHERE
			MEM_ID = #{MEM_ID}
	]]>	
	</select>

<!--   id중복확인 -->
<!-- 	<select id="selectIdCheck" parameterType="hashmap" resultType=“int”>
   <![CDATA[
       SELECT  COUNT(*)
      FROM    MEMBER
      WHERE   MEM_ID = #{MEM_ID}
      
   ]]>
   </select> -->
	
<!-- 아이디 찾기 -->	
<select id="findId" parameterType="hashmap" resultType="hashmap">
<![CDATA[
	SELECT
		MEM_ID, MEM_NAME
	FROM
		MEMBER
	WHERE
		MEM_PHONE = #{MEM_PHONE} AND MEM_NAME = #{MEM_NAME}
]]>
</select>
	
<!-- 비밀번호 찾기 -->	
<select id="findPw" parameterType="hashmap" resultType="hashmap">
<![CDATA[
	SELECT
		MEM_PW, MEM_NAME
	FROM
		MEMBER
	WHERE
		MEM_ID = #{MEM_ID} AND MEM_PHONE = #{MEM_PHONE} AND MEM_NAME = #{MEM_NAME}
]]>
</select>	
	
<!-- insertMember(회원가입 성공) -->
	<insert id="insertMember" parameterType="hashmap">	
	<![CDATA[	
		INSERT INTO
		MEMBER
			(MEM_ID,
			MEM_PW,
			MEM_NAME,
			MEM_REGDATE,
			MEM_ADD1,
			MEM_ADD2,
			MEM_ZIPCODE,
			MEM_PHONE,
			MEM_BLOCK)
		VALUES
			(#{MEM_ID},
			#{MEM_PW},
			#{MEM_NAME},
			SYSDATE,
			#{MEM_ADD1},
			#{MEM_ADD2},
			#{MEM_ZIPCODE},
			#{MEM_PHONE},
			’N’
			)
	]]>	
	</insert>	
	

<!-- deleteMember(회원탈퇴기능) -->
	<delete id="deleteMember" parameterType="hashmap">	
	<![CDATA[	
		DELETE
		FROM
			MEMBER
		WHERE
			MEM_ID=#{MEM_ID}
	]]>	
	</delete>	
	
<!-- updateMember(회원정보수정) -->
	<update id="updateMember" parameterType="hashmap" >	
	<![CDATA[	
		UPDATE
			MEMBER
		SET
			MEM_PW = #{MEM_PW},
			MEM_ADD1 = #{MEM_ADD1},
			MEM_ADD2 = #{MEM_ADD2},
			MEM_ZIPCODE = #{MEM_ZIPCODE},
			MEM_PHONE =#{MEM_PHONE}
			WHERE
			MEM_ID=#{MEM_ID}
	]]>	
	</update>	

<!-- updateMemberAdmin -->
	<update id="updateMemberAdmin" parameterType="hashmap" >	
	<![CDATA[	
	UPDATE
		MEMBER
	SET
		MEM_PW = #{MEM_PW},
		MEM_NAME = #{MEM_NAME},
		MEM_ZIPCODE = #{MEM_ZIPCODE},
		MEM_ADD1 = #{MEM_ADD1},
		MEM_ADD2 = #{MEM_ADD2},
		MEM_PHONE =#{MEM_PHONE},
	WHERE
		MEM_ID=#{MEM_ID}
	]]>	
	</update>	
	
	
<!-- memberList(회원리스트) -->
	<select id="memberList" resultType="hashmap">	
	<![CDATA[	
	SELECT *
	FROM
		MEMBER
	]]>	
	</select>
	
	
<!-- memberListPaging(회원리스트 페이징) -->	
	<select id="memberListPaging" parameterType="hashmap" resultType="hashmap">	
	<![CDATA[	
	SELECT *
	FROM (
		SELECT MEM_ID, MEM_NAME, MEM_REGDATE, MEM_PHONE, ROWNUM R
		FROM (
			SELECT
				MEM_ID, MEM_NAME, MEM_REGDATE, MEM_PHONE
			FROM
				MEMBER
			ORDER BY MEM_REGDATE ASC
			)
		ORDER BY R
		)	
	WHERE
		R BETWEEN #{START} AND #{END}
	]]>	
	</select>		
	

<!--memberListSearchPaging(회원리스트 검색페이징)-->
	<select id="memberListSearchPaging" parameterType="hashmap" resultType="hashmap">	
	<![CDATA[	
	SELECT *
	FROM (
		SELECT MEM_ID, MEM_NAME, MEM_REGDATE, MEM_PHONE, ROWNUM R
		FROM (
			SELECT
				MMEM_ID, MEM_NAME, MEM_REGDATE, MEM_PHONE
			FROM
				MEMBER
			<where>
			<if test="KEYWORD!=NULL">
				<if test="CONDITION.equals('MEM_NAME')">
					NAME LIKE '%'||#{KEYWORD}||'%'
				</if>
				<if test="CONDITION.equals('MEM_ID')">
					RANK LIKE '%'||#{KEYWORD}||'%'
				</if>
				<if test="CONDITION.equals('MEM_PHONE')">
					RANK LIKE '%'||#{KEYWORD}||'%'
				</if>
			</if>
			</where>
			ORDER BY MEM_REGDATE ASC
			)
		ORDER BY R
		)
	WHERE
		R BETWEEN #{START} AND #{END}
	]]>	
	</select>	
	
<!-- memberCount(회원수) -->
	<select id="memberCount" parameterType="hashmap" resultType="hashmap">	
	SELECT
		COUNT(*) COUNT
	FROM
		MEMBER
	</select>
	

<!-- memberSearchCount(회원 수) -->
   	<select id="memberSearchCount" parameterType="hashmap" resultType="hashmap">
   		SELECT
   			COUNT(*) COUNT
   		FROM 
   			MEMBER
   		<where>
   			<if test="KEYWORD!=NULL">
   				<if test="CONDITION.equals('MEM_NAME')">
   					EMAIL LIKE '%'||#{KEYWORD}||'%'
   				</if>
				<if test="CONDITION.equals('MEM_ID')">
   					NAME LIKE '%'||#{KEYWORD}||'%'
   				</if>
				<if test="CONDITION.equals('MEM_PHONE')">
   					RANK LIKE '%'||#{KEYWORD}||'%'
   				</if>
   			</if>
   		</where>
	</select>	

</mapper>
